[delayed_gcode _CLEAR_DISPLAY]
gcode:
  M117

[gcode_macro _STATUS_MESSAGE]
description: Displays status message and changes LED status. 
gcode:
        # Parameters
    {% set text = params.TEXT|default("TEST MESSAGE")|string %}
    {% set text_type = params.MSG_TYPE|default('command') %}
    {% set status = params.STATUS|default('READY') %}
    {% set duration = params.MSG_DURATION|default(1)|int %}

    RESPOND TYPE={text_type} MSG="{text}"
    STATUS_{status}
    UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION={duration}

[gcode_macro _RESETSPEEDS]
gcode:
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} 
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}  
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity} 

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    STATUS_OFF

[delayed_gcode DELAYED_OFF]
gcode:
    OFF ; call "OFF" macro, to turn off everything (heaters, motors, lights, fans)

## Reset SD File after Print_END or CANCEL_PRINT
## This will avoid the reprint option in Mainsail after a print is done
[delayed_gcode _DELAY_SDCARD_RESET_FILE]
gcode:
  SDCARD_RESET_FILE

[gcode_macro DIRECT_MOVE]
gcode:
  {% set out_param = ["G0"] %}
  {% set _dummy = out_param.append("X%s" % params.X) if params.X %}
  {% set _dummy = out_param.append("Y%s" % params.Y) if params.Y %}
  {% set _dummy = out_param.append("Z%s" % params.Z) if params.Z %}
  {% set _dummy = out_param.append("E%s" % params.E) if params.E %}
  {% set _dummy = out_param.append("F%s" % params.F) if params.F %}
  {out_param|join(" ")}

##  action_respond_info will be always executed at the beginning of an macro evaluation.
##  Use _PRINT_AR if you need the order of several console outputs in the order given by the macro
##  Use: _PRINT_AR T="QGL forced by PRINT_START"
[gcode_macro _PRINT_AR]
description: Helper: Action response
gcode:
  {% if params.SHOW_LCD|default('false') == 'true' %} M117 {params.T} {% endif %}
  {action_respond_info(params.T)}

[gcode_macro M115]
description: Print host and mcu version
rename_existing: M115.1
gcode:
  {% set out = ['mcu build version:'] %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% if name2 is in ['mcu_version'] %}
        {% set _dummy = out.append("%s: %s" % (name1, printer[name1][name2])) %}
      {% endif %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(out|join("\n"))}
  M115.1